{"version":3,"sources":["lobby/lobby.tsx","bingo/bingo.tsx","Pages.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GameLobby","children","type","Players","database","firebase","ref","playerRef","child","React","useState","players","setPlayers","clearPlayers","set","addPlayer","player","nextPlayers","useEffect","on","snapshot","val","Object","keys","usePlayers","name","setName","maybePlayer","window","localStorage","getItem","Card","CardHeader","title","CardContent","map","Box","mb","mt","display","alignContent","TextField","fullWidth","variant","label","value","onChange","e","target","Button","onClick","setItem","m","bingoSheetOptions","B","I","N","G","O","randomIntFromInterval","min","max","Math","floor","random","getInitialValues","number","values","push","DrawNumber","bingoRef","options","setOptions","drawnNumber","setDrawnNumber","drawn","setDrawn","undefined","index","length","nextNumber","nextDrawn","nextOptions","filter","_","i","console","log","flexWrap","sort","border","p","key","useBingoSheet","sheet","setSheet","checked","setChecked","saveSheet","saveChecks","JSON","parse","recreate","newSheet","reduce","letter","row","num","includes","stringify","check","next","BingoBlock","handleClick","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","bgcolor","color","Home","List","ListItem","to","button","Link","Layout","AppBar","position","Toolbar","path","theme","createMuiTheme","palette","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","ThemeProvider","CssBaseline","Container","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gUAWaA,EAA2B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KACnD,OACE,6BACE,kBAAC,EAAD,CAASA,KAAMA,IACdD,KAiCDE,EAAU,SAAC,GAAc,IAAD,EA5BX,WAAgB,IAAfD,EAAc,uDAAP,GACnBE,EAAWC,aAAoBC,MAC/BC,EAAYH,EAASI,MAAT,UAAkBN,EAAlB,aAFc,EAGFO,IAAMC,SAAmB,IAHvB,mBAGzBC,EAHyB,KAGhBC,EAHgB,KAI1BC,EAAe,WACnBN,EAAUO,IAAI,KAEVC,EAAY,SAACC,GACjB,IAAMC,EAAW,sBAAON,GAAP,CAAgBK,IACjCJ,EAAWK,GACXV,EAAUC,MAAMQ,GAAQF,IAAIE,IAe9B,OAZAP,IAAMS,WAAU,WACdX,EAAUY,GAAG,SAAS,SAACC,GACrB,GAAIA,EAASC,MAAO,CAClB,IAAMV,EAAeW,OAAOC,KAAKH,EAASC,OAC1CT,EAAWD,QAEXC,EAAW,SAId,IAEI,CAAED,UAASI,YAAWF,gBAIgBW,CADjB,EAAXtB,MACTS,EADoB,EACpBA,QAASI,EADW,EACXA,UAAWF,EADA,EACAA,aADA,EAEJJ,IAAMC,SAAS,IAFX,mBAErBe,EAFqB,KAEfC,EAFe,KAS5B,OANAjB,IAAMS,WAAU,WACd,IAAMS,EAAcC,OAAOC,aAAaC,QAjC7B,oBAkCPH,GACFD,EAAQC,KAET,IAED,6BACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,eAClB,kBAACC,EAAA,EAAD,KACGvB,EAAQwB,KAAI,SAACnB,GAAD,OACX,6BAAMA,QAIZ,kBAACoB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,QAAQ,OAAOC,aAAa,UAC7C,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,SACRC,MAAM,eACNC,MAAOpB,EACPqB,SAAU,SAACC,GAAD,OAAOrB,EAAQqB,EAAEC,OAAOH,UAEpC,kBAACI,EAAA,EAAD,CACEC,QAAS,WACPnC,EAAUU,GACVG,OAAOC,aAAasB,QA3DjB,mBA2DiC1B,KAHxC,eASF,kBAACW,EAAA,EAAD,CAAKgB,EAAG,GACN,kBAACH,EAAA,EAAD,CAAQC,QAASrC,GAAjB,mB,8ECxEFwC,EAAoB,CACxBC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IACnDC,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5DC,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5DC,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5DC,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAG9D,SAASC,EAAsBC,EAAaC,GAE1C,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGtD,IAOMK,EAAmB,WAGvB,IAFA,IARiBpB,EAQbqB,EAAS,EACPC,EAAS,GACRD,EAAS,IACdC,EAAOC,KAAP,WAXevB,EAWUqB,EAVvBrB,EAAQ,IAAMA,EAAQ,GAAW,IACjCA,EAAQ,IAAMA,EAAQ,GAAW,IACjCA,EAAQ,IAAMA,EAAQ,GAAW,IACjCA,EAAQ,IAAMA,EAAQ,GAAW,IAC9B,MAML,OAAmCqB,IACnCA,IAEF,OAAOC,GAGHE,EAAa,WACjB,IACMC,EADWjE,aAAoBC,MACXE,MAAM,eAFT,EAGOC,IAAMC,SAASuD,KAHtB,mBAGhBM,EAHgB,KAGPC,EAHO,OAIe/D,IAAMC,WAJrB,mBAIhB+D,EAJgB,KAIHC,EAJG,OAKGjE,IAAMC,SAAmB,IAL5B,mBAKhBiE,EALgB,KAKTC,EALS,KA2CvB,OApBAnE,IAAMS,WAAU,WACdoD,EAASnD,GAAG,SAAS,SAACC,GACpB,GAAIA,EAASC,MAAO,CAAC,IAAD,EAKTD,EAASC,MALA,IAEhBkD,eAFgB,MAENN,IAFM,MAGhBU,aAHgB,MAGR,GAHQ,EAIhBF,EAJgB,EAIhBA,YAEFD,EAAWD,GACXG,EAAeD,GACfG,EAASD,QAETH,EAAWP,KACXS,OAAeG,GACfD,EAAS,SAIZ,IAGD,6BACE,kBAAC3B,EAAA,EAAD,CAAQC,QAvCO,WACjB,IAAM4B,EAAQnB,EAAsB,EAAGY,EAAQQ,QACzCC,EAAaT,EAAQO,GACrBG,EAAS,sBAAON,GAAP,CAAcJ,EAAQO,KAC/BI,EAAcX,EAAQY,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMP,KACnDQ,QAAQC,IAAI,CACVP,aACAC,YACAC,gBAEFZ,EAASxD,IAAI,CACX2D,YAAaO,EACbL,MAAOM,EACPV,QAASW,MA0BT,uBACA,kBAAC9C,EAAA,EAAD,CAAKgB,EAAG,GAAR,kBAA2BqB,GAC3B,kBAACrC,EAAA,EAAD,CAAKG,QAAQ,OAAOiD,SAAS,QAC1Bb,EAAMc,OAAOtD,KAAI,SAAC+B,GACjB,OACE,kBAAC9B,EAAA,EAAD,CAAKsD,OAAQ,EAAGtC,EAAG,EAAGuC,EAAG,EAAGC,IAAK1B,GAC9BA,OAMT,kBAAC9B,EAAA,EAAD,CAAKE,GAAI,GACP,kBAACW,EAAA,EAAD,CACEC,QAAS,WACPoB,EAASxD,IAAI,MAFjB,oBA8BF+E,EAAgB,WAAM,MAEApF,IAAMC,SAAgB,IAFtB,mBAEnBoF,EAFmB,KAEZC,EAFY,OAGItF,IAAMC,SAAc,IAHxB,mBAGnBsF,EAHmB,KAGVC,EAHU,KA6B1B,OAXAxF,IAAMS,WAAU,WACd,IAAMgF,EAAYtE,OAAOC,aAAaC,QAAQ,SACxCqE,EAAavE,OAAOC,aAAaC,QAAQ,UAC3CoE,GACFH,EAASK,KAAKC,MAAMH,IAElBC,GACFF,EAAWG,KAAKC,MAAMF,MAEvB,IAEI,CACLL,QACAQ,SA3Be,WACf,IAAMC,EAtBDjF,OAAOC,KAAK8B,GAAmBmD,QAAO,SAACV,EAAOW,GAInD,IAFA,IAAMlC,EAAUlB,EAAkBoD,GAC9BC,EAAgB,GACbA,EAAI3B,OAAS,GAAG,CACrB,IACM4B,EAAMpC,EADEZ,EAAsB,EAAGY,EAAQQ,OAAS,IAEnD2B,EAAIE,SAASD,IAChBD,EAAItC,KAAKuC,GAGb,OAAO,2BAAKb,GAAZ,kBAAoBW,EAASC,MAC5B,IAWD9E,OAAOC,aAAasB,QAAQ,QAASiD,KAAKS,UAAUN,IACpDN,EAAW,IACXF,EAASQ,GACT3E,OAAOC,aAAasB,QAAQ,SAAUiD,KAAKS,UAAU,MAuBrDb,UACAc,MArBY,SAAClB,GACb,IAAMmB,EAAI,2BAAQf,GAAR,kBAAkBJ,GAAOI,EAAQJ,KAC3CK,EAAWc,GACXnF,OAAOC,aAAasB,QAAQ,SAAUiD,KAAKS,UAAUE,OAsB5CC,EAAa,WAAO,IAAD,EACcnB,IAApCC,EADsB,EACtBA,MAAOQ,EADe,EACfA,SAAUN,EADK,EACLA,QAASc,EADJ,EACIA,MAC5BG,EAAc,SAACrB,GACnBkB,EAAMlB,IAGR,OAAIE,GAASA,EAAMxC,GAAKwC,EAAMxC,EAAE,GAE5B,oCACE,kBAAC4D,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,UAAjB,KACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,KACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,KACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,KACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,OAGJ,kBAACC,EAAA,EAAD,KACE,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMxC,EAAE,KAGb,kBAACkE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMvC,EAAE,KAGb,kBAACiE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMtC,EAAE,KAGb,kBAACgE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMrC,EAAE,KAGb,kBAAC+D,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMpC,EAAE,MAIf,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMxC,EAAE,KAGb,kBAACkE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMvC,EAAE,KAGb,kBAACiE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMtC,EAAE,KAGb,kBAACgE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMrC,EAAE,KAGb,kBAAC+D,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMpC,EAAE,MAIf,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMxC,EAAE,KAGb,kBAACkE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMvC,EAAE,KAGb,kBAACiE,EAAA,EAAD,CAAWC,MAAM,UAAjB,SACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMrC,EAAE,KAGb,kBAAC+D,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMpC,EAAE,MAIf,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMxC,EAAE,KAGb,kBAACkE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMvC,EAAE,KAGb,kBAACiE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMtC,EAAE,KAGb,kBAACgE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMrC,EAAE,KAGb,kBAAC+D,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMpC,EAAE,MAIf,kBAAC6D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMxC,EAAE,KAGb,kBAACkE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMvC,EAAE,KAGb,kBAACiE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMtC,EAAE,KAGb,kBAACgE,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMrC,EAAE,KAGb,kBAAC+D,EAAA,EAAD,CAAWC,MAAM,SAASvE,QAAS,kBAAM+D,EAAY,QACnD,kBAAC7E,EAAA,EAAD,CACEuF,QAAS3B,EAAO,GAAS,sBAAmBnB,EAC5C+C,MAAO5B,EAAO,GAAS,aAAUnB,GAEhCiB,EAAMpC,EAAE,SAQrB,kBAAC0D,EAAA,EAAD,KACE,kBAAChF,EAAA,EAAD,CAAKE,GAAI,GACP,kBAACW,EAAA,EAAD,CAAQC,QAASoD,GAAjB,iBAGJ,kBAACc,EAAA,EAAD,KACE,kBAAChF,EAAA,EAAD,CAAKE,GAAI,GACP,kBAAC,EAAD,SAMD,kBAACW,EAAA,EAAD,CAAQC,QAASoD,GAAjB,gB,oCCzYEuB,EAAO,WAClB,OACE,kBAAC9F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,0BAClB,kBAACC,EAAA,EAAD,KACE,kBAAC4F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,GAAG,SAASC,QAAM,EAACd,UAAWe,KAAxC,SAGA,kBAACH,EAAA,EAAD,CAAUC,GAAG,SAASC,QAAM,EAACd,UAAWe,KAAxC,UAGA,kBAACH,EAAA,EAAD,CAAUC,GAAG,SAASC,QAAM,EAACd,UAAWe,KAAxC,aAQGC,EAAS,WACpB,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACrF,EAAA,EAAD,CAAQ+E,GAAG,IAAIb,UAAWe,KAA1B,qBAKJ,kBAAC9F,EAAA,EAAD,CAAKE,GAAI,IACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiG,KAAK,UACV,kBAAC,EAAD,CAAWrI,KAAK,SACd,kBAAC,EAAD,QAEK,IACT,kBAAC,IAAD,CAAOqI,KAAK,KACV,kBAAC,EAAD,UC3CJC,EAAQC,YAAe,CAC3BC,QAAS,CACPxI,KAAM,UAcVG,gBAVuB,CACrBsI,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAkBMC,MAbf,WACE,OACE,kBAACC,EAAA,EAAD,CAAeX,MAAOA,GACpB,kBAACY,EAAA,EAAD,MACA,6BACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,UCvBUC,QACW,cAA7B1H,OAAO2H,SAASC,UAEe,UAA7B5H,OAAO2H,SAASC,UAEhB5H,OAAO2H,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDsI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/E,QAAQ+E,MAAMA,EAAMC,c","file":"static/js/main.7753f66f.chunk.js","sourcesContent":["import React from \"react\";\nimport * as firebase from \"firebase\";\nimport {\n  TextField,\n  Button,\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n} from \"@material-ui/core\";\n\nexport const GameLobby: React.FC<any> = ({ children, type }) => {\n  return (\n    <div>\n      <Players type={type} />\n      {children}\n    </div>\n  );\n};\nconst PLAYER = \"STIFTBLOCKPLAYER\";\nconst usePlayers = (type = \"\") => {\n  const database = firebase.database().ref();\n  const playerRef = database.child(`${type}/players`);\n  const [players, setPlayers] = React.useState<string[]>([]);\n  const clearPlayers = () => {\n    playerRef.set({});\n  };\n  const addPlayer = (player: string) => {\n    const nextPlayers = [...players, player];\n    setPlayers(nextPlayers);\n    playerRef.child(player).set(player);\n  };\n\n  React.useEffect(() => {\n    playerRef.on(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        const players: any = Object.keys(snapshot.val());\n        setPlayers(players);\n      } else {\n        setPlayers([]);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return { players, addPlayer, clearPlayers };\n};\n\nconst Players = ({ type }) => {\n  const { players, addPlayer, clearPlayers } = usePlayers(type);\n  const [name, setName] = React.useState(\"\");\n  React.useEffect(() => {\n    const maybePlayer = window.localStorage.getItem(PLAYER);\n    if (maybePlayer) {\n      setName(maybePlayer);\n    }\n  }, []);\n  return (\n    <div>\n      <Card>\n        <CardHeader title=\"es spielen\"></CardHeader>\n        <CardContent>\n          {players.map((player) => (\n            <div>{player}</div>\n          ))}\n        </CardContent>\n      </Card>\n      <Box mb={2} mt={2} display=\"flex\" alignContent=\"center\">\n        <TextField\n          fullWidth\n          variant=\"filled\"\n          label=\"Spieler Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <Button\n          onClick={() => {\n            addPlayer(name);\n            window.localStorage.setItem(PLAYER, name);\n          }}\n        >\n          mitspielen\n        </Button>\n      </Box>\n      <Box m={3}>\n        <Button onClick={clearPlayers}>neue Spieler</Button>\n      </Box>\n    </div>\n  );\n};\n","import React from \"react\";\nimport * as firebase from \"firebase\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nconst bingoSheetOptions = {\n  B: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n  I: [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\n  N: [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45],\n  G: [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60],\n  O: [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75],\n};\n\nfunction randomIntFromInterval(min: number, max: number) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst getPrefix = (value: number) => {\n  if (value > 15 && value < 31) return \"I\";\n  if (value > 30 && value < 46) return \"N\";\n  if (value > 45 && value < 61) return \"G\";\n  if (value > 60 && value < 76) return \"O\";\n  return \"B\";\n};\nconst getInitialValues = () => {\n  let number = 1;\n  const values = [];\n  while (number < 76) {\n    values.push(`${getPrefix(number)}${number}`);\n    number++;\n  }\n  return values;\n};\n\nconst DrawNumber = () => {\n  const database = firebase.database().ref();\n  const bingoRef = database.child(\"bingo-state\");\n  const [options, setOptions] = React.useState(getInitialValues());\n  const [drawnNumber, setDrawnNumber] = React.useState();\n  const [drawn, setDrawn] = React.useState<number[]>([]);\n  const drawNumber = () => {\n    const index = randomIntFromInterval(0, options.length);\n    const nextNumber = options[index];\n    const nextDrawn = [...drawn, options[index]];\n    const nextOptions = options.filter((_, i) => i !== index);\n    console.log({\n      nextNumber,\n      nextDrawn,\n      nextOptions,\n    });\n    bingoRef.set({\n      drawnNumber: nextNumber,\n      drawn: nextDrawn,\n      options: nextOptions,\n    });\n  };\n\n  React.useEffect(() => {\n    bingoRef.on(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        const {\n          options = getInitialValues(),\n          drawn = [],\n          drawnNumber,\n        }: any = snapshot.val();\n        setOptions(options);\n        setDrawnNumber(drawnNumber);\n        setDrawn(drawn);\n      } else {\n        setOptions(getInitialValues());\n        setDrawnNumber(undefined);\n        setDrawn([]);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <Button onClick={drawNumber}>NEUE NUMMER ZIEHEN!</Button>\n      <Box m={2}>Aktueller Zug: {drawnNumber}</Box>\n      <Box display=\"flex\" flexWrap=\"wrap\">\n        {drawn.sort().map((number) => {\n          return (\n            <Box border={1} m={2} p={2} key={number}>\n              {number}\n            </Box>\n          );\n        })}\n      </Box>\n\n      <Box mt={6}>\n        <Button\n          onClick={() => {\n            bingoRef.set({});\n          }}\n        >\n          Spiel Beenden\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nconst createBingoSheet = () => {\n  return Object.keys(bingoSheetOptions).reduce((sheet, letter: any) => {\n    //@ts-ignore\n    const options = bingoSheetOptions[letter];\n    let row: number[] = [];\n    while (row.length < 5) {\n      const index = randomIntFromInterval(0, options.length - 1);\n      const num = options[index];\n      if (!row.includes(num)) {\n        row.push(num);\n      }\n    }\n    return { ...sheet, [letter]: row };\n  }, {});\n};\n\ntype Bingo = typeof bingoSheetOptions;\n\nconst useBingoSheet = () => {\n  //@ts-ignore\n  const [sheet, setSheet] = React.useState<Bingo>({});\n  const [checked, setChecked] = React.useState<any>({});\n  const recreate = () => {\n    const newSheet: any = createBingoSheet();\n    window.localStorage.setItem(\"bingo\", JSON.stringify(newSheet));\n    setChecked({});\n    setSheet(newSheet);\n    window.localStorage.setItem(\"checks\", JSON.stringify({}));\n  };\n\n  const check = (key: string) => {\n    const next = { ...checked, [key]: !checked[key] };\n    setChecked(next);\n    window.localStorage.setItem(\"checks\", JSON.stringify(next));\n  };\n\n  React.useEffect(() => {\n    const saveSheet = window.localStorage.getItem(\"bingo\");\n    const saveChecks = window.localStorage.getItem(\"checks\");\n    if (saveSheet) {\n      setSheet(JSON.parse(saveSheet));\n    }\n    if (saveChecks) {\n      setChecked(JSON.parse(saveChecks));\n    }\n  }, []);\n\n  return {\n    sheet,\n    recreate,\n    checked,\n    check,\n  };\n};\n\nexport const BingoBlock = () => {\n  const { sheet, recreate, checked, check } = useBingoSheet();\n  const handleClick = (key: string) => {\n    check(key);\n  };\n\n  if (sheet && sheet.B && sheet.B[0]) {\n    return (\n      <>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">B</TableCell>\n                <TableCell align=\"center\">I</TableCell>\n                <TableCell align=\"center\">N</TableCell>\n                <TableCell align=\"center\">G</TableCell>\n                <TableCell align=\"center\">O</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell align=\"center\" onClick={() => handleClick(\"b0\")}>\n                  <Box\n                    bgcolor={checked[\"b0\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"b0\"] ? \"white\" : undefined}\n                  >\n                    {sheet.B[0]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"i0\")}>\n                  <Box\n                    bgcolor={checked[\"i0\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"i0\"] ? \"white\" : undefined}\n                  >\n                    {sheet.I[0]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"n0\")}>\n                  <Box\n                    bgcolor={checked[\"n0\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"n0\"] ? \"white\" : undefined}\n                  >\n                    {sheet.N[0]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"g0\")}>\n                  <Box\n                    bgcolor={checked[\"g0\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"g0\"] ? \"white\" : undefined}\n                  >\n                    {sheet.G[0]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"o0\")}>\n                  <Box\n                    bgcolor={checked[\"o0\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"o0\"] ? \"white\" : undefined}\n                  >\n                    {sheet.O[0]}\n                  </Box>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell align=\"center\" onClick={() => handleClick(\"b1\")}>\n                  <Box\n                    bgcolor={checked[\"b1\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"b1\"] ? \"white\" : undefined}\n                  >\n                    {sheet.B[1]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"i1\")}>\n                  <Box\n                    bgcolor={checked[\"i1\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"i1\"] ? \"white\" : undefined}\n                  >\n                    {sheet.I[1]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"n1\")}>\n                  <Box\n                    bgcolor={checked[\"n1\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"n1\"] ? \"white\" : undefined}\n                  >\n                    {sheet.N[1]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"g1\")}>\n                  <Box\n                    bgcolor={checked[\"g1\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"g1\"] ? \"white\" : undefined}\n                  >\n                    {sheet.G[1]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"o1\")}>\n                  <Box\n                    bgcolor={checked[\"o1\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"o1\"] ? \"white\" : undefined}\n                  >\n                    {sheet.O[1]}\n                  </Box>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell align=\"center\" onClick={() => handleClick(\"b2\")}>\n                  <Box\n                    bgcolor={checked[\"b2\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"b2\"] ? \"white\" : undefined}\n                  >\n                    {sheet.B[2]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"i2\")}>\n                  <Box\n                    bgcolor={checked[\"i2\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"i2\"] ? \"white\" : undefined}\n                  >\n                    {sheet.I[2]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\">BINGO</TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"g2\")}>\n                  <Box\n                    bgcolor={checked[\"g2\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"g2\"] ? \"white\" : undefined}\n                  >\n                    {sheet.G[2]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"o2\")}>\n                  <Box\n                    bgcolor={checked[\"o2\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"o2\"] ? \"white\" : undefined}\n                  >\n                    {sheet.O[2]}\n                  </Box>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell align=\"center\" onClick={() => handleClick(\"b3\")}>\n                  <Box\n                    bgcolor={checked[\"b3\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"b3\"] ? \"white\" : undefined}\n                  >\n                    {sheet.B[3]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"i3\")}>\n                  <Box\n                    bgcolor={checked[\"i3\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"i3\"] ? \"white\" : undefined}\n                  >\n                    {sheet.I[3]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"n3\")}>\n                  <Box\n                    bgcolor={checked[\"n3\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"n3\"] ? \"white\" : undefined}\n                  >\n                    {sheet.N[3]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"g3\")}>\n                  <Box\n                    bgcolor={checked[\"g3\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"g3\"] ? \"white\" : undefined}\n                  >\n                    {sheet.G[3]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"o3\")}>\n                  <Box\n                    bgcolor={checked[\"o3\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"o3\"] ? \"white\" : undefined}\n                  >\n                    {sheet.O[3]}\n                  </Box>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell align=\"center\" onClick={() => handleClick(\"b4\")}>\n                  <Box\n                    bgcolor={checked[\"b4\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"b4\"] ? \"white\" : undefined}\n                  >\n                    {sheet.B[4]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"i4\")}>\n                  <Box\n                    bgcolor={checked[\"i4\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"i4\"] ? \"white\" : undefined}\n                  >\n                    {sheet.I[4]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"n4\")}>\n                  <Box\n                    bgcolor={checked[\"n4\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"n4\"] ? \"white\" : undefined}\n                  >\n                    {sheet.N[4]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"g4\")}>\n                  <Box\n                    bgcolor={checked[\"g4\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"g4\"] ? \"white\" : undefined}\n                  >\n                    {sheet.G[4]}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\" onClick={() => handleClick(\"o4\")}>\n                  <Box\n                    bgcolor={checked[\"o4\"] ? \"secondary.main\" : undefined}\n                    color={checked[\"o4\"] ? \"white\" : undefined}\n                  >\n                    {sheet.O[4]}\n                  </Box>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <Paper>\n          <Box mt={4}>\n            <Button onClick={recreate}>NEUER BLOCK</Button>\n          </Box>\n        </Paper>\n        <Paper>\n          <Box mt={4}>\n            <DrawNumber />\n          </Box>\n        </Paper>\n      </>\n    );\n  } else {\n    return <Button onClick={recreate}>neuer Block</Button>;\n  }\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { GameLobby } from \"./lobby/lobby\";\nimport { BingoBlock } from \"./bingo\";\nimport {\n  List,\n  ListItem,\n  Card,\n  CardContent,\n  CardHeader,\n  AppBar,\n  Toolbar,\n  Button,\n  Box,\n} from \"@material-ui/core\";\n\nexport const Home = () => {\n  return (\n    <Card>\n      <CardHeader title=\"was wollt ihr spielen\" />\n      <CardContent>\n        <List>\n          <ListItem to=\"/quixx\" button component={Link}>\n            QUIXX\n          </ListItem>\n          <ListItem to=\"wizard\" button component={Link}>\n            WIZARD\n          </ListItem>\n          <ListItem to=\"/bingo\" button component={Link}>\n            BINGO\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  );\n};\nexport const Layout = () => {\n  return (\n    <Router>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Button to=\"/\" component={Link}>\n            STIFT UND BLOCK\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Box mt={4} />\n      <Switch>\n        <Route path=\"/bingo\">\n          <GameLobby type=\"bingo\">\n            <BingoBlock />\n          </GameLobby>\n        </Route>{\" \"}\n        <Route path=\"/\">\n          <Home></Home>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import React from \"react\";\nimport * as firebase from \"firebase\";\nimport {\n  Container,\n  createMuiTheme,\n  ThemeProvider,\n  CssBaseline,\n} from \"@material-ui/core\";\n\nimport { Layout } from \"./Pages\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBuPLRmYKHALdmBh2eLo_R4bTX0TPFxDdk\",\n  authDomain: \"stift-und-block.firebaseapp.com\",\n  databaseURL: \"https://stift-und-block.firebaseio.com\",\n  projectId: \"stift-und-block\",\n  storageBucket: \"stift-und-block.appspot.com\",\n  messagingSenderId: \"822446116090\",\n  appId: \"1:822446116090:web:437507b535935bec210d43\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div>\n        <Container>\n          <Layout />\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}